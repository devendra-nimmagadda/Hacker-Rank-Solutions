import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {

    // Complete the surfaceArea function below.
    static int surfaceArea(int[][] A) {
        
        int sides = 0;
        sides = A.length * A[0].length * 2;
        for(int i=0; i<A[0].length; i++) {
            sides += A[0][i] + A[A.length-1][i];
        }
        
        for(int i=0; i<A.length; i++) {
            sides += A[i][0] + A[i][A[0].length-1];
        }
        
        for(int i=0; i<A.length; i++) {
            for(int j=0; j<A[0].length; j++) {
                if(j<A[0].length-1) 
                    sides += Math.abs(A[i][j] - A[i][j+1]);
                if(i>0)
                    sides += Math.abs(A[i][j] - A[i-1][j]);
            }
        }
        
        return sides;
    
    }

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        String[] HW = scanner.nextLine().split(" ");

        int H = Integer.parseInt(HW[0]);

        int W = Integer.parseInt(HW[1]);

        int[][] A = new int[H][W];

        for (int i = 0; i < H; i++) {
            String[] ARowItems = scanner.nextLine().split(" ");
            scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

            for (int j = 0; j < W; j++) {
                int AItem = Integer.parseInt(ARowItems[j]);
                A[i][j] = AItem;
            }
        }

        int result = surfaceArea(A);

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();

        bufferedWriter.close();

        scanner.close();
    }
}
