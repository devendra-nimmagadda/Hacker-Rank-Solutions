import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

public class Solution {

    // Complete the superReducedString function below.
    static String superReducedString(String s) {

        String res = s;
        if(s.length() > 1) {
            boolean flag;
            do {
                flag = false;
                List<Character> list = new ArrayList<>();
                for(int i=0; i<res.length(); i++) {
                    if((i+1) < res.length() && res.charAt(i) == res.charAt(i+1)) {
                        flag = true;
                        i++;
                    }
                    else 
                        list.add(res.charAt(i));
                }
                
                res = list.stream().map(e->e.toString()).collect(Collectors.joining());
            } while(flag && res.length() > 1);
            
        }
        return res.isEmpty()?"Empty String":res; 
    }

    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        String s = bufferedReader.readLine();

        String result = superReducedString(s);

        bufferedWriter.write(result);
        bufferedWriter.newLine();

        bufferedReader.close();
        bufferedWriter.close();
    }
}
