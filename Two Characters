import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

public class Solution {

    // Complete the alternate function below.
    static int alternate(String s) {


        Set<String> chars = new HashSet<>();
        for(char c:s.toCharArray()) {
            chars.add(String.valueOf(c));
        }
        List<String> charlist = new ArrayList<>(chars);
        List<String> list = new ArrayList<>();
        for(int i=0; i<charlist.size(); i++) {
            for(int j=i+1; j<chars.size(); j++) {
                list.add(charlist.get(i)+","+charlist.get(j));
            }
        }
        List<String> result = new ArrayList<>();
        //System.out.println(list);
        for(String str:list) {
            boolean flag = true;
            String[] vals = str.split(",");
            Set<String> set = new HashSet<>();
            set.add(vals[0]);
            set.add(vals[1]);
            
            Set<String> set2 = new HashSet<>(chars);
            set2.removeAll(set);
            
            String temp = s;
            String finalString = null;
            for(String val:set2) {
                finalString = temp.replace(val, "");
                temp = finalString;
            }
            //System.out.println(temp);
            finalString = temp;
            for(String val:vals) {
                if(finalString.contains(val+val)) {
                    flag = false;
                    break;
                }
            }
            if(flag) {
                result.add(finalString);
            }
        }
        int max = 0;
        
        for(String str: result) {
            if(max < str.length())
                max = str.length();
        }
        return max;

    

    }

    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int l = Integer.parseInt(bufferedReader.readLine().trim());

        String s = bufferedReader.readLine();

        int result = alternate(s);

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();

        bufferedReader.close();
        bufferedWriter.close();
    }
}
