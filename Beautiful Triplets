import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {

    // Complete the beautifulTriplets function below.
    static int beautifulTriplets(int d, int[] arr) {

        int tripleCount = 0, count= 0;        
        if(arr.length >= 3) {            
            int x = -1, y = -1, z = -1;
            for(int i=0; i<arr.length-2; i++) {
                x = arr[i];
                count = 1;
                for(int j=i+1; j<arr.length; j++) {
                    if(count == 1 && arr[j] - x == d) {
                        y = arr[j];
                        count = 2;
                    } else if(count == 2 && arr[j] - y == d) {
                            z = arr[j];
                            count = 3;
                    }
                    if(x != -1 && y != -1 && z != -1) {
                        x = y = z = -1;
                        tripleCount ++;
                        break;
                    }
                }
            }            
        }
        return tripleCount;
    
    }

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        String[] nd = scanner.nextLine().split(" ");

        int n = Integer.parseInt(nd[0]);

        int d = Integer.parseInt(nd[1]);

        int[] arr = new int[n];

        String[] arrItems = scanner.nextLine().split(" ");
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        for (int i = 0; i < n; i++) {
            int arrItem = Integer.parseInt(arrItems[i]);
            arr[i] = arrItem;
        }

        int result = beautifulTriplets(d, arr);

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();

        bufferedWriter.close();

        scanner.close();
    }
}
