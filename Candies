import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {

    // Complete the candies function below.
    static long candies(int n, int[] arr) {      

        int[] a = new int [arr.length], b = new int [arr.length];
        long res = 0;

        if(arr.length > 1) {
            int pre = arr[0], count = 1;
            a[0] = 1;
            for(int i=1;i<arr.length;i++) {
                if(pre < arr[i]) 
                    count++;
                else 
                    count = 1;
                pre = arr[i];
                a[i] = count;
            }
            b[arr.length-1] = 1;
            pre = arr[arr.length-1];
            for(int i=arr.length-2; i>=0; i--) {
                if(pre < arr[i])
                    count++;
                else 
                    count=1;
                pre = arr[i];
                b[i] = count;
            }
        }                
        for(int i=0; i<arr.length; i++) {
            if(a[i] > b[i]) 
                res += a[i];
            else
                res+=b[i];
        }
        return res;        
    
    }

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int n = scanner.nextInt();
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        int[] arr = new int[n];

        for (int i = 0; i < n; i++) {
            int arrItem = scanner.nextInt();
            scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");
            arr[i] = arrItem;
        }

        long result = candies(n, arr);

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();

        bufferedWriter.close();

        scanner.close();
    }
}
