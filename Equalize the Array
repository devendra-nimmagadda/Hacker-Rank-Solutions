import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;
import java.util.Map.Entry;
import java.util.function.Function;
import java.util.stream.Collectors;
import java.util.stream.IntStream;

public class Solution {

    // Complete the equalizeArray function below.
    static int equalizeArray(int[] arr) {
        int sum = 0;
        if(IntStream.of(arr).filter(x -> (x < 1 || x > 100)).count() > 0)
            return 0;
        if(arr.length > 0) {
            Map<Integer, Long> result = IntStream.of(arr).
                                        boxed().                
                                        collect(
                                                Collectors.groupingBy(Function.identity(), Collectors.counting())
                                                );
            result = result.entrySet().stream()
                                            .sorted(Entry.comparingByValue())
                                            .collect(Collectors.toMap(Entry::getKey, Entry::getValue,
                                                                      (e1, e2) -> e1, LinkedHashMap::new));
            long max = Integer.MIN_VALUE;
            for(Integer key:result.keySet()) {
                if(max < result.get(key)) {
                    max = result.get(key);
                }
            }

            for(Integer key:result.keySet()) {
                sum += result.get(key);
            }
            sum -= max;
        }
        return sum;

    }

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int n = scanner.nextInt();
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        int[] arr = new int[n];

        String[] arrItems = scanner.nextLine().split(" ");
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        for (int i = 0; i < n; i++) {
            int arrItem = Integer.parseInt(arrItems[i]);
            arr[i] = arrItem;
        }

        int result = equalizeArray(arr);

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();

        bufferedWriter.close();

        scanner.close();
    }
}
